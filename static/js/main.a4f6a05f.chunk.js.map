{"version":3,"sources":["components/util/SignDates.js","components/util/Helpers.js","components/template/RandomCatImage.js","components/FibonacciComponent.js","components/views/SimpleChatBot.js","App.js","serviceWorker.js","index.js"],"names":["signs","name","start","end","getRandomCatUrl","catUrl","JSON","parse","window","localStorage","getItem","getRandomJoke","axios","get","then","response","setItem","stringify","data","delay","Date","getTime","sleep","RandomCatImage","console","log","url","catch","error","react_default","a","createElement","src","style","maxWidth","maxHeight","alt","Component","fibonacciComponent","props","fibonacciInput","steps","value","number","parseInt","counter","values","push","length","toString","justCalculateFibonacci","SimpleChatBot","scrollTo","react_simple_chatbot_default","float","margin","headerTitle","botAvatar","id","message","trigger","options","label","_ref","previousValue","user","validator","isNaN","component","FibonacciComponent_fibonacciComponent","wordWrap","date","dateFormatted","moment","format","match","isValid","isValidDate","_ref2","wasMatched","find","sign","isBetween","toUpperCase","findSign","_ref3","joke","setup","getJokeSetup","_ref4","punchline","getJokePunchline","template_RandomCatImage","App","className","views_SimpleChatBot","display","listStyleType","paddingRight","href","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4f6a05f.chunk.js","sourcesContent":["export const signs = [\n\t{name: 'aries', \t\tstart: '03/21', end: '04/19'},\n\t{name: 'taurus', \t\tstart: '04/20', end: '05/20'},\n\t{name: 'gemini', \t\tstart: '05/21', end: '06/20'},\n\t{name: 'cancer', \t\tstart: '06/21', end: '07/22'},\n\t{name: 'leo', \t\t\tstart: '07/23', end: '08/22'},\n\t{name: 'virgo', \t\tstart: '08/23', end: '09/22'},\n\t{name: 'libra', \t\tstart: '09/23', end: '10/22'},\n\t{name: 'scorpio', \t\tstart: '10/23', end: '11/21'},\n\t{name: 'sagittarius', \tstart: '11/22', end: '12/21'},\n\t{name: 'capricorn', \tstart: '12/22', end: '01/19'},\n\t{name: 'aquarius', \t\tstart: '01/20', end: '02/18'},\n\t{name: 'pisces', \t\tstart: '02/19', end: '03/20'}\n]","import axios from 'axios'\nimport moment from 'moment'\nimport { signs } from './SignDates'\n\nexport const sleep = (delay) => {\n\tvar start = new Date().getTime();\n\twhile (new Date().getTime() < start + delay);\n}\n\n\nexport const justCalculateFibonacci = (number) => {\n\tif(parseInt(number, 10) >= 1) {\n\t\tlet counter = 0\n\t\tlet previous = 0\n\t\tlet next = 1\n\t\tvar values = []\n\t\tvalues.push(previous)\n\t\tvalues.push(next)\n\n\t\twhile(counter < number-2) {\n\t\t\tvalues.push((values[values.length-1] + values[values.length-2]))\n\t\t\tcounter += 1\n\t\t}\n\t\treturn values.toString()\n\t}\n}\n\n\n\nexport const calculateFibonacci = (number) => {\n\tif(parseInt(number, 10) >= 1) {\n\t\tlet counter = 0\n\t\tlet previous = 0\n\t\tlet next = 1\n\t\tvar values = []\n\t\tvalues.push(previous)\n\t\tvalues.push(next)\n\n\t\twhile(counter < number-2) {\n\t\t\tvalues.push((values[values.length-1] + values[values.length-2]))\n\t\t\tcounter += 1\n\t\t}\n\t\twindow.localStorage.setItem('fibonacciAnswer', values.toString())\n\t\treturn ''\n\t}\n}\n\nexport const showFibonacciAnswer = () => {\n\treturn window.localStorage.getItem('fibonacciAnswer')\n}\n\nexport const isValidDate = (date) => {\n\tlet regex = /^\\d{2}[./-]\\d{2}$/\n\tlet dateFormat = 'MM-DD';\n\tlet dateFormatted = moment(date).format(dateFormat)\n\n\tif(date.match(regex) && moment(dateFormatted,dateFormat,true).isValid())\n\t\treturn true\n\telse\n\t\treturn false\n}\n\nexport const findSign = (date) => {\n\tlet wasMatched = signs.find(sign => moment(date).isBetween(sign.start, sign.end))\n\tif(wasMatched)\n\t\treturn wasMatched.name.toUpperCase()\n\telse\n\t\treturn 'sign not found'\n}\n\nexport const getRandomCat = () => {\n\taxios.get('https://api.thecatapi.com/v1/images/search')\n\t.then(response => {\n\t\twindow.localStorage.setItem('catUrl', JSON.stringify(response.data[0].url))\n\t})\n\t.catch(error => {console.log(error)})\n}\n\nexport const getRandomCatUrl = () => {\n\tlet catUrl = JSON.parse(window.localStorage.getItem('catUrl'))\n\treturn catUrl ? catUrl : null\n}\n\nexport const getRandomJoke = () => {\n\taxios.get('https://official-joke-api.appspot.com/random_joke')\n\t.then(response => {\n\t\twindow.localStorage.setItem('joke', JSON.stringify(response.data))\n\t\tsleep(2000)\n\t})\n}\n\nexport const getJokeSetup = () => {\n\tlet joke = JSON.parse(window.localStorage.getItem('joke'))\n\treturn joke ? joke.setup : null\n}\n\nexport const getJokePunchline = () => {\n\tlet joke = JSON.parse(window.localStorage.getItem('joke'))\n\treturn joke ? joke.punchline : null\n}\n","import React, { Component } from 'react'\nimport { getRandomCat, getRandomCatUrl } from '../util/Helpers'\n\nclass RandomCatImage extends Component {\n\tcomponentDidMount() {\n\t\tconsole.log(getRandomCat())\n\t\tconsole.log(getRandomCatUrl())\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<img src={getRandomCatUrl()} style={{maxWidth: '100%', maxHeight: '100%'}} alt=\"cute kitten\"/>\n\t\t\t\t<p>What a cute :3</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default RandomCatImage","import React from 'react'\nimport { justCalculateFibonacci } from './util/Helpers'\n\nexport const fibonacciComponent = (props) => {\n\tconst { steps } = props;\n\tconst fibonacciInput = steps.fibonacciInput.value\n\n\treturn (\n\t\t<div>\n\t\t\tthe input was {fibonacciInput},\n\t\t\t<br/>\n\t\t\tthe relative Fibonacci Sequence is: {justCalculateFibonacci(fibonacciInput)}\n\t\t</div>\n\t)\n}","import React, { Component } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport RandomCatImage from '../template/RandomCatImage'\nimport { fibonacciComponent as FibonacciComponent } from '../FibonacciComponent'\nimport { justCalculateFibonacci,calculateFibonacci, showFibonacciAnswer, findSign, isValidDate, getRandomJoke, getJokeSetup, getJokePunchline } from '../util/Helpers'\n\nclass SimpleChatBot extends Component {\n\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0, 0)\n\t}\n\n\trender() {\n\t\tlet styles = {\n\t\t    float: 'none',\n\t\t    margin: '0 auto'\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ChatBot\n\t\t\t\t\tstyle={styles}\n\t\t\t\t\theaderTitle=\"Goofy Chatbot\"\n\t\t\t\t\tbotAvatar={\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRB4Q7TL8gZll_6fwz4AmyGGRN7P3yloo1vNPbDCCPIR8KADAhQ\"}\n\t\t\t\t\tsteps={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: '1',\n\t\t\t\t\t\t\tmessage: \"Hi, I'm the Goofy ChatBot, able to answer a few questions... please select one of the following:\",\n\t\t\t\t\t\t\ttrigger: 'options',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'options',\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: 'fibonacci', label: '1) Fibonacci sequence', trigger: 'beginFibonacci' },\n\t\t\t\t\t\t\t\t{ value: 'findSign', label: '2) Find your sign', trigger: 'beginFindSign' },\n\t\t\t\t\t\t\t\t{ value: 'joke', label: '3) Tell a joke', trigger: 'beginJoke' },\n\t\t\t\t\t\t\t\t{ value: 'female', label: '4) See a kitten', trigger: 'beginCatImage' },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'beginFibonacci',\n\t\t\t\t\t\t\tmessage: 'fibonacci, ok, please insert a number..',\n\t\t\t\t\t\t\ttrigger: 'fibonacciInput'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'beginFindSign',\n\t\t\t\t\t\t\tmessage: 'let me know your birthdate month and day..',\n\t\t\t\t\t\t\ttrigger: 'findSignInput'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'beginJoke',\n\t\t\t\t\t\t\tmessage: ({ previousValue, steps }) => {\n\t\t\t\t\t\t\t\tgetRandomJoke()\n\t\t\t\t\t\t\t\treturn 'let me think...'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrigger: 'showJokeSetup'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'beginCatImage',\n\t\t\t\t\t\t\tmessage: \"so let's see a cute kitten XD\",\n\t\t\t\t\t\t\ttrigger: 'showKitten'\n\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t// --------- FIBONACCI LOGIC ----------------\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'fibonacciInput',\n\t\t\t\t\t\t\tuser: true,\n\t\t\t\t\t\t\tvalidator: (value) => {\n\t\t\t\t\t\t\t\tif (isNaN(value))\n\t\t\t\t\t\t\t\t\treturn 'value must be a number'\n\t\t\t\t\t\t\t\telse if (value < 0)\n\t\t\t\t\t\t\t\t\treturn 'value must be positive'\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrigger: 'calculateFibonacci'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'calculateFibonacci',\n\t\t\t\t\t\t\tcomponent: <FibonacciComponent />,\n\t\t\t\t\t\t\ttrigger: 'finishedOption'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'showFibonacciAnswer',\n\t\t\t\t\t\t\tcomponent: (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p style={{\n    \t\t\t\t\t\t\t\t\tmaxWidth:'200px',\n    \t\t\t\t\t\t\t\t\twordWrap: 'breakWord'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{showFibonacciAnswer()}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttrigger: 'finishedOption'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// ------------------------------------------\n\n\n\t\t\t\t\t\t// --------- FIND SIGN LOGIC ----------------\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'findSignInput',\n\t\t\t\t\t\t\tuser: true,\n\t\t\t\t\t\t\tvalidator: (value) => {\n\t\t\t\t\t\t\t\tif (!isValidDate(value))\n\t\t\t\t\t\t\t\t\treturn 'date format must be: MM/DD'\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrigger: 'findSign'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'findSign',\n\t\t\t\t\t\t\tmessage: ({ previousValue, steps }) => {\n\t\t\t\t\t\t\t\treturn 'Your sign based in your birth date is ' + findSign(previousValue)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrigger: 'finishedOption'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// ------------------------------------------\n\n\t\t\t\t\t\t// ------------ TELL JOKE LOGIC -------------\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'showJokeSetup',\n\t\t\t\t\t\t\tmessage: ({ previousValue, steps }) => {\n\t\t\t\t\t\t\t\treturn getJokeSetup()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrigger: 'getAnswer'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'getAnswer',\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: 'view answer', label: 'show me the answer..', trigger: 'showJokePunchline' },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'showJokePunchline',\n\t\t\t\t\t\t\tmessage: ({ previousValue, steps }) => {\n\t\t\t\t\t\t\t\treturn getJokePunchline()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrigger: 'finishedOption'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// ------------------------------------------\n\n\t\t\t\t\t\t// ---------- SHOW KITTEN LOGIC -------------\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'beginCatImage',\n\t\t\t\t\t\t\tcomponent: <RandomCatImage/>,\n\t\t\t\t\t\t\ttrigger: 'finishedOption'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// ------------------------------------------\n\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'finishedOption',\n\t\t\t\t\t\t\tmessage: 'Do you want to try other option?',\n\t\t\t\t\t\t\ttrigger: 'rerun',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'rerun',\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: 'yes', label: 'Yes', trigger: 'options' },\n\t\t\t\t\t\t\t\t{ value: 'no', label: 'No', trigger: 'finish' },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'finish',\n\t\t\t\t\t\t\tmessage: 'Thank you for iteracting with me :D',\n\t\t\t\t\t\t\tend: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SimpleChatBot;","import React from 'react';\nimport './App.css';\nimport SimpleChatBot from './components/views/SimpleChatBot'\n\nfunction App() {\n\n\tlet styles = {\n\t\tlist: {\n\t\t\tdisplay: 'inline',\n\t\t\tlistStyleType: 'none',\n\t\t\tpaddingRight: '20px'\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h3>A simple chat bot demonstration</h3>\n\n\t\t\t<SimpleChatBot/>\n\n\t\t\t<br/>\n\n\t\t\t<h4>Javascript stack used</h4>\n\n\t\t\t<ul id=\"navlist\" style={styles.list}>\n\t\t\t\t<li><a href=\"https://github.com/facebook/react\">react</a></li>\n\t\t\t\t<li><a href=\"https://github.com/LucasBassetti/react-simple-chatbot\">simple-chat-bot</a></li>\n\t\t\t\t<li><a href=\"https://github.com/moment/moment\">moment</a></li>\n\t\t\t\t<li><a href=\"https://github.com/axios/axios\">axios</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}